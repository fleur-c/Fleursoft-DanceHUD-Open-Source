// This work is licensed under a Creative Commons Attribution 3.0 Unported License (http://creativecommons.org/licenses/by/3.0/)

#ifndef UTILITY
#define UTILITY
// Simple utility functions/macros that we gathered in one simple place to include

// We want some nice easy list and string manipulation routines which used to try
//  hard to conserve memory (always clear the input before returning a result).
//  The hack is no longer needed with mono... so - simple macros now...
//
// Usage: AppendToString(something, "new thing to add");

#define AppendToString(input, addition) \
    input+=addition

#define AppendStringToList(input, addition) \
    input+=addition

#define AppendIntegerToList(input, addition) \
    input+=addition

#define AppendListToList(input, addition) \
    input+=addition

#define InsertListToList(input,addition,location) \
    input = llListInsertList(input, addition, location)

#define ReplaceListEntry(input, newPart, location) \
    input = llListReplaceList(input,newPart,location,location)

#define DeleteListEntry(input, location) \
    llDeleteSubList(input,location,location)

#define SortList(input, stride, direction) \
    input = llListSort(input, stride, direction)

#endif
